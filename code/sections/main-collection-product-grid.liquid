{%- assign st = section.settings -%}

{%- assign initial_column = st.grid_columns -%}
{%- if st.grid_layout == 'list' -%}
  {%- assign initial_column = 1 -%}
{%- endif -%}

{%- assign show_filter = st.show_filter -%}
{%- if st.filters_type == 'storefront_filters' and collection.filters.size == 0 -%}
  {%- assign show_filter = false -%}
{%- endif -%}
{%- if st.filters_type == 'tags_filter' and section.blocks.size == 0 -%}
  {%- assign show_filter = false -%}
{%- endif -%}

<section
  data-section-type="collection-template"
  data-section-id="{{ section.id }}"
  data-filters-type="{{ st.filters_type }}"
  data-filters-position="{{ st.sidebar }}"
  data-enable-filters="{{ st.show_filter }}"
  data-enable-sorting="{{ st.show_sorting }}"
  data-show-col-switchers="{{ st.show_columns_switcher }}"
  data-pagination-type="{{ st.paginate_type }}"
  data-product-count="{{ collection.products.size }}"
  data-initial-column="{{ initial_column }}"
>
  {% if request.path contains 'bfcm' %}
    <style>
      .collectionBanner{display:none;}
      .collectionBfcmBanner{width:100%;position:relative;display:block;}
      .collectionBfcmBanner img{width:100%;display:block;}
      .mShow{display:none;}
      @media screen and (max-width: 767px){
        .pcShow{display:none;}
        .mShow{display:block;}
        .collect-bfcm-box .collect-bfcm-title h1{font-size: 20px;}
      }
    </style>
    <div class="collectionBfcmBanner pcShow" >
      <img src="https://cdn.shopify.com/s/files/1/0610/7208/1122/files/20221110-111241.jpg?v=1668050007" />
    </div>
    <div class="collectionBfcmBanner mShow" >
      <img src="https://cdn.shopify.com/s/files/1/0610/7208/1122/files/20221110-111236.jpg?v=1668050006" />
    </div>
  {% endif %}
  <div class="{{ st.container }}{% if st.container == 'w-full' %} px-4 xl:px-[30px]{% endif %}">
    {% if request.path contains 'black-friday' or request.path contains 'blowout-sale' %}      
      {% comment %} <input type="hidden" value="{{ request.path }}" /> {% endcomment %}
        <div class="collect-bfcm-box">
          <div class="collect-bfcm-title">
            <h1>Blowout Sale - Up to 70% OFF with unlimited style</h1>
          </div>
          <div class="collect-bfcm-wrapper">
            <div class="swiper-wrapper">

              <div class="swiper-slide">
                {% assign bfcm_collection = collections['outerwear'] %}
                <a href="/collections/{{ bfcm_collection.handle }}">
                  <div class="collect-bfcm-img"><span><img loading="lazy" src="https://cdn.shopify.com/s/files/1/0610/7208/1122/files/outwear.png?v=1667890259"/></span></div>
                  <div class="collect-bfcm-name">jackets</div>
                </a>
              </div>

              <div class="swiper-slide">
                {% assign bfcm_collection = collections['bottoms'] %}
                <a href="/collections/{{ bfcm_collection.handle }}">
                  <div class="collect-bfcm-img"><span><img loading="lazy" src="https://cdn.shopify.com/s/files/1/0610/7208/1122/files/bottom.png?v=1667890259"/></span></div>
                  <div class="collect-bfcm-name">{{ bfcm_collection.title }}</div>
                </a>
              </div>

              <div class="swiper-slide">
                {% assign bfcm_collection = collections['shoes'] %}
                <a href="/collections/{{ bfcm_collection.handle }}">
                  <div class="collect-bfcm-img"><span><img loading="lazy" src="https://cdn.shopify.com/s/files/1/0610/7208/1122/files/shoe.png?v=1667890260"/></span></div>
                  <div class="collect-bfcm-name">{{ bfcm_collection.title }}</div>
                </a>
              </div>

              <div class="swiper-slide">
                {% assign bfcm_collection = collections['hoodies-sweatshirts'] %}
                <a href="/collections/{{ bfcm_collection.handle }}">
                  <div class="collect-bfcm-img"><span><img loading="lazy" src="https://cdn.shopify.com/s/files/1/0610/7208/1122/files/Hoodie.png?v=1667890259"/></span></div>
                  <div class="collect-bfcm-name">Hoodies</div>
                </a>
              </div>

              <div class="swiper-slide">
                {% assign bfcm_collection = collections['tees'] %}
                <a href="/collections/{{ bfcm_collection.handle }}">
                  <div class="collect-bfcm-img"><span><img loading="lazy" src="https://cdn.shopify.com/s/files/1/0610/7208/1122/files/tee.png?v=1667890259"/></span></div>
                  <div class="collect-bfcm-name">{{ bfcm_collection.title }}</div>
                </a>
              </div>

              <div class="swiper-slide">
                {% assign bfcm_collection = collections['accessories'] %}
                <a href="/collections/{{ bfcm_collection.handle }}">
                  <div class="collect-bfcm-img"><span><img loading="lazy" src="https://cdn.shopify.com/s/files/1/0610/7208/1122/files/20221109-163625.png?v=1667984035"/></span></div>
                  <div class="collect-bfcm-name">{{ bfcm_collection.title }}</div>
                </a>
              </div>



            </div>
          </div>
        </div>
      {% endif %}
    <div class="sf__collection-container {% if st.show_filter %}sidebar__{{ st.sidebar }}{% endif %}">
      {%- render 'collection-sidebar', show_filter: show_filter -%}
      <div id="CollectionProductGrid" class="flex-1 w-full {% unless st.sidebar == 'fixed' or st.show_filter == false %}xl:w-3/4 2xl:w-4/5{% endunless %}">
        {%- render 'collection-page-toolbar', show_filter: show_filter -%}
        {%- if st.show_filter -%}
          {%- if st.filters_type == 'storefront_filters' -%}
            {%- render 'collection-filters-facets' -%}
          {%- else -%}
            {%- render 'selected-tags-filter' -%}
          {%- endif -%}
        {%- endif -%}
        {%- paginate collection.products by st.pagination_limit -%}
          {%- if collection.products.size == 0 -%}
            <div class="empty-collection py-24 flex flex-col w-full items-center">
              <span>{%- render 'icon', name: 'empty-collection', fill: '#9a9a9a' -%}</span>
              <p class="mt-5 text-color-subtext">{{ 'collections.general.no_matches' | t }}</p>
            </div>
          {%- else -%}
            <div
              class="sf__product-listing sf__col-{{ initial_column }}"
              data-total-pages="{{ paginate.pages }}"
              data-product-container
            >
              <div class="mt-6 flex flex-wrap -mx-2 xl:-mx-3">

    <!-- 置顶连接开始 -->
       {% assign handleSize = 0 %}
       {% if collection.sort_by == '' and canonical_url contains 'q=' %}
            {% assign url_ = canonical_url | split: 'q='%}
            {% assign handles = url_[1] | downcase | replace:'%2c',',' | split: ',' %}
       {% else %}
            {% assign handles = collection.sort_by | downcase | replace:'%2C',',' | replace:'%2c',',' | split: ',' %}
        {% endif %}
        <!-- 计算分页置顶获取的数据 每页面最多 page_size条-->
        {% assign currentOffset = paginate.current_page | minus:1 | times:20 %}
        {% assign realPageHadles = "," %}
        {% if currentOffset < handles.size %}
        {%for handle in handles offset:currentOffset limit:20%}
          {%- assign product = all_products[handle] -%}
          {% if product != empty %}
          {%assign realPageHadles = realPageHadles | append : handle | append:','%}
            {% assign handleSize = handleSize|plus: 1 %}
            <div class="sf__col-item w-6/12 md:w-4/12 px-2 xl:px-3" data-product-vendor="{{ product.vendor }}">
                    {%- render 'product-card', product: product -%}
            </div>
          {% endif %}
        {% endfor %}
        {%endif%}
    <!-- 置顶连接结束 -->
    <!-- 商品的个数开始 -->
    {% assign productCount = collection.products | size %}
    {% if paginate.page_size > productCount %}
        {% assign productSize = productCount | minus: handleSize %}
    {% else %}
        {% assign productSize = paginate.page_size | minus: handleSize %}
    {% endif %}
    <!-- 商品的个数结束 -->
    <!-- 循环商品开始 -->
    {% assign productIndex = 0 %}
    {%- for product in collection.products -%}
      {% assign key = "," | append: product.handle | append:","%}
      {% if realPageHadles contains key %}
        {% continue %}
      {% else %}
      {% assign productIndex = productIndex | plus: 1 %}
        {% if productIndex > productSize %}
           {% continue %}
       {% else %}          
         <div class="sf__col-item w-6/12 md:w-4/12 px-2 xl:px-3" data-product-vendor="{{ product.vendor }}">
                    {%- render 'product-card', product: product -%}
        </div>
       {% endif %}
     {% endif %}
    {%- else -%}
      <div class="grid__item">
        <p>{{ 'collections.general.no_matches' | t }}</p>
      </div>
    {%- endfor -%}
              </div>
            </div>
            {% if paginate.pages > 1 %}
              <div class="text-center mt-10">
                {%- if st.paginate_type == 'paginate' -%}
                  {%- render 'pagination', paginate: paginate, anchor: '' -%}
                {%- else -%}
                  <button class="sf__btn sf__btn-primary" data-load-more>
                    <span>
                      {%- render 'new-locale', key: 'collections.paginate.load_more' -%}
                    </span>
                    {%- render 'icon', name: 'spinner', size: 'medium' -%}
                  </button>
                {%- endif -%}
              </div>
            {% endif %}
          {%- endif -%}
        {%- endpaginate -%}
      </div>
    </div>
  </div>

  {% if st.show_sorting %}
    {%- render 'sort-by-mobile' -%}
  {% endif %}
  <script>
    (function(){
      
        if($('.ProductColorShow').length>0){
          setTimeout(()=>{
            let colorData = window.MinimogSettings._colorSwatches;
            // console.log(11,colorData);
            let colorObj={};
            $.each(colorData,function(i,d){
                colorObj[d.key] = d.value;
            }); 
            // console.log(22,colorObj);
            $('.ProductColorShow').find('span').each(function(){
              let $span = $(this)
              let spancolor = $span.attr('data-color');
              let bgColor = spancolor;
              if(colorObj[spancolor]!=null){
                //bgColor = colorObj[spancolor]
                bgColor = colorData.find(c => c.key === spancolor)?.value;
              }
              bgColor = bgColor.replace(' ','');
              $span.attr('style','width:20px;height:20px;display:block;background-color:'+bgColor+';border-radius: 50px;margin-right: 15px;margin-bottom: 10px;border: 1px solid #ccc; box-shadow: 0 0 2px #222;')


              if($('.collect-bfcm-wrapper').length>0){
                new Swiper('.collect-bfcm-wrapper', {
                  direction: 'horizontal',
                  freeMode: false,
                  loop: false,
                  slidesPerView: 'auto',  
                  observer:true,
                });
              }
            })
          },1000);
        }
      
      
    })()
  </script>
</section>

{% schema %}
  {
    "name": "Product listing",
    "settings": [
      {
        "type": "header",
        "content": "General"
      },
      {
        "type": "select",
        "id": "container",
        "label": "Container type",
        "default": "container",
        "options": [
            {
                "value": "container-fluid",
                "label": "Default"
            },
            {
                "value": "w-full",
                "label": "Full width"
            },
            {
                "value": "container",
                "label": "Use container box"
            }
        ]
      },
      {
        "type": "header",
        "content": "layout"
      },
      {
        "type": "radio",
        "id": "grid_layout",
        "label": "Default layout",
        "options": [
          {
            "label": "List",
            "value": "list"
          },
          {
            "label": "Grid",
            "value": "grid"
          }
        ],
        "default": "grid"
      },
      {
        "type": "select",
        "id": "grid_columns",
        "label": "Products per row in Grid layout",
        "info": "For devices with screen width greater than 1024px",
        "options": [
          {
            "value": "2",
            "label": "2"
          },
          {
            "value": "3",
            "label": "3"
          },
          {
            "value": "4",
            "label": "4"
          },
          {
            "value": "5",
            "label": "5"
          }
        ],
        "default": "3"
      },
      {
        "type": "checkbox",
        "id": "show_columns_switcher",
        "label": "Show columns switcher",
        "default": true
      },

      {
        "type": "header",
        "content": "Pagination"
      },
      {
        "type": "range",
        "id": "pagination_limit",
        "label": "Products per page",
        "default": 12,
        "min": 6,
        "max": 50,
        "step": 1
      },
      {
        "type": "select",
        "id": "paginate_type",
        "label": "Pagination type",
        "default": "paginate",
        "options": [
          {
            "value": "paginate",
            "label": "Paging by number"
          },
          {
            "value": "loadmore",
            "label": "Load more button"
          },
          {
            "value": "infinite",
            "label": "Infinite loading"
          }
        ]
      },
      {
        "type": "header",
        "content": "Sorting and Filtering"
      },
      {
        "type": "checkbox",
        "id": "show_sorting",
        "label": "Enable sorting",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_filter",
        "label": "Enable filtering",
        "default": false
      },
      {
        "type": "select",
        "id": "filters_type",
        "label": "Filters type",
        "options": [
          {
            "label": "Storefront filters",
            "value": "storefront_filters"
          },
          {
            "label": "Filters by custom tags",
            "value": "tags_filter"
          }
        ],
        "default": "storefront_filters",
        "info": "Note: the Storefront filters will be hidden if your collection contains more than 1000 products. [Learn more about filters](\/admin\/menus)"
      },
      {
        "type": "select",
        "id": "sidebar",
        "label": "Filters position",
        "options": [
          {
            "value": "leftColumn",
            "label": "Left sidebar"
          },
          {
            "value": "rightColumn",
            "label": "Right sidebar"
          },
          {
            "value": "fixed",
            "label": "Off-canvas sidebar"
          }
        ],
        "default": "leftColumn"
      },
      {
        "type": "text",
        "id": "sidebar_title",
        "label": "Filters title",
        "default": "Filters",
        "info": "Leave blank to hide"
      },
      {
        "type": "checkbox",
        "id": "limit_height_widget",
        "label": "Limit filter widget's height",
        "default": false
      },
      {
        "type": "range",
        "id": "limit_height",
        "label": "Max height",
        "default": 300,
        "step": 10,
        "min": 200,
        "max": 600,
        "unit": "px"
      },
      {
        "type": "header",
        "content": "Storefront filters settings"
      },
      {
        "type": "paragraph",
        "content": "For Storefront filters only."
      },
      {
        "type": "checkbox",
        "id": "change_product_variant_on_fitlering",
        "label": "Change product card variant on filtering",
        "default": true,
        "info": "Change product card options, price and image based on the variant after filtering."
      },
      {
        "type": "checkbox",
        "id": "show_product_count",
        "label": "Show results count on filter item",
        "default": true
      },
      {
        "type": "text",
        "id": "collapsed_groups",
        "label": "Collapsed filter groups",
        "default": "Brand, Vendor, Size",
        "info": "Filters groups that collapsed by default. Separate by comma."
      },
      {
        "type": "text",
        "id": "color_swatches",
        "label": "Color swatches group",
        "default": "color,colour,couleur,farbe",
        "info": "Enter color option name, separate by comma."
      }
    ],
    "blocks": [
      {
        "type": "filter",
        "name": "Filter by tags",
        "settings": [
          {
            "type": "paragraph",
            "content": "[Filter values correspond to the value \"Tags\" in the product.](https:\/\/docs.shopify.com\/manual\/your-store\/products\/edit-tags)"
          },
          {
            "type": "paragraph",
            "content": "The filters won't work with the tags include some special symbols such as %, $ and other currency symbols"
          },
          {
          "type": "paragraph",
          "content": "Note: if the tag contains no products, it will not appear."
          },
          {
            "type": "select",
            "id": "design_filtergroup",
            "label": "Design",
            "options": [
              {
                "value": "default",
                "label": "List"
              },
              {
                "value": "inrow",
                "label": "Inline link"
              },
              {
                "value": "button",
                "label": "Button"
              },
              {
                "value": "color",
                "label": "Color"
              }
            ],
            "default": "default"
          },
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Tags"
          },
          {
            "type": "textarea",
            "id": "filtergroup",
            "label": "Tags List",
            "default": "Vintage,tops,shirts",
            "info": "Example: Vintage,tops,shirts..."
          },
          {
            "type": "checkbox",
            "id": "show_label",
            "label": "Show color with label",
            "default": false,
            "info": "Work with filter colors"
          },
          {
            "type": "checkbox",
            "id": "use_accordion",
            "label": "Enable collapsible",
            "default": true
          },
          {
            "type": "checkbox",
            "id": "open_filtergroup",
            "label": "Expand by default",
            "default": true
          }
        ]
      },
      {
        "type": "collections",
        "name": "Collections list",
        "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Collections"
          },
          {
            "type": "link_list",
            "id": "menu",
            "label": "Menu",
            "info": "Only show items linked to a collection"
          },
          {
            "type": "checkbox",
            "id": "show_image",
            "label": "Show featured image",
            "default": false
          },
          {
            "type": "checkbox",
            "id": "use_accordion",
            "label": "Enable collapsible",
            "default": true
          },
          {
            "type": "checkbox",
            "id": "open_filtergroup",
            "label": "Expand by default",
            "default": true
          }
        ]
      }
    ]
  }
{% endschema %}
